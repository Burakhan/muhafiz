{"name":"Muhafiz","tagline":"Guard your codebase from bad codes!","body":"muhafiz\r\n=======\r\n\r\nMaster: [![Build Status](https://secure.travis-ci.org/sonsuzdongu/muhafiz.png?branch=master)](http://travis-ci.org/sonsuzdongu/muhafiz)\r\n\r\nGuard your codebase from bad code!\r\n\r\n                             ...',,,,,',:\r\n                            ,,.',okxc,,,Oc\r\n                           .,.',;0OOx,,,;K'\r\n                           :.',,;XoxK,,,,cK.\r\n                          ';.',,,l00d,,,,,oO\r\n                          c''',,,oWWo,,,,,,O:\r\n                         ,:.',,,,;NX,,,,,,,:0\r\n                         ,;.',,,,,K0,,,,,,,,k;\r\n                         ;,',,,,:OMWx;,,,,,,l.\r\n                        .odxxox0NNWNNXkooxOXW.\r\n                         okKWNNX0NNXKkNNWWWWN.\r\n                         'dOWNWNKNWNX0MXNWWWo\r\n                          ,oONWX0KWN0OKNWWNo.\r\n                        ....;c;...cl',',lo;'...\r\n                      .......';odOKXNKc'..'',,,'.\r\n                     ...;ldxlxWWWWWWWWXW0doc;,,,,.\r\n                    .'oKNWWWWN0kOKXXX00NWNWWN0xc,,.\r\n                   'xNWWWWWN0o'..,:c,'',kNWWWWWWKo,\r\n                  ,XWWNX0Odc,',oxxxxc.,,':xXNNNWWWK;\r\n                 .0WXOdl:,..''ldolodx;',,,,;lkKXXNWN.\r\n                .:xxc;'.  ..,'ldddooxc',,,,,,,.',:;:\r\n                   ....  ...,,,oxxxOd,,,,,,,,,....\r\n                     ... ..',,,'lokd,,,,,,,,,,...\r\n                       .....,,,'oxKd,,,,,,,,,..\r\n                         ...,,,'o0Wd,,,,;;:c:\r\n                         :oxdxxcoNWkxkkkO0KKx\r\n                         .';;;;,OXW0...,,,,,'\r\n                       ...',,,'lKKW0...,,,,,,.\r\n                       ..',,,,.dWO0k,..,,,,,,,\r\n                      ..',,,,,.cNdOk:..,,,,,,,'\r\n                     ..',,,,,,..Ookkc..',,,,,,,\r\n                     '.,,,,,,'. lkdx:...,,,,,,,.\r\n                     ..,,,,,'.. 'xox....',,,,,,.\r\n                     ..,,,,,..   :o:'  ...,,,,,'\r\n                     ..,,,,.      c..     .,,,,.\r\n                     .......      ..      .......\r\n\r\n\r\n## Git\r\n\r\n### Installation\r\n\r\nYou need to copy the required git-hook to your project's .git/hooks directory\r\nAnd put the src directory in somewhere (eg. ~/muhafiz/src)\r\n\r\n    $ git clone git://github.com/sonsuzdongu/muhafiz.git ~/muhafiz\r\n    $ cp ~/muhafiz/git-hooks/* /your/project/.git/hooks\r\n\r\n\r\n### Configuration\r\n\r\nYou have to set your **'muhafiz.bootstrap-file'** git config setting to show your **muhafiz** bootstrap file\r\n\r\n    $ git config muhafiz.bootstrap-file ~/muhafiz/src/bootstrap.php\r\n\r\nOr better you set it system wide or global\r\n\r\n    $ sudo git config --global muhafiz.bootstrap-file ~/muhafiz/src/bootstrap.php\r\n    $ sudo git config --system muhafiz.bootstrap-file ~/muhafiz/src/bootstrap.php\r\n\r\nThen you have to set the comma separated list of code checkers(aka runners) using 'muhafiz.active-runners' git config parameter\r\n\r\n    $ git config muhafiz.active-runners 'phpcs, jshint'\r\n\r\nAfter this, **'all your commits are belongs to us'**. All your commits will be checked by given runners and commit will be prevented if are there any errors\r\n\r\n\r\n## Subversion\r\n\r\n### Installation\r\n\r\nYou need to copy the required svn-hook to your repository's hooks directory\r\nAnd put the src directory in somewhere (eg. ~/muhafiz/src)\r\n\r\n    $ git clone git://github.com/sonsuzdongu/muhafiz.git ~/muhafiz\r\n    $ cp ~/muhafiz/svn-hooks/pre-commit /home/svn/your_project/hooks/\r\n    $ cp ~/muhafiz/svn-hooks/muhafiz.conf /home/svn/your_project/conf/\r\n\r\n\r\n### Configuration\r\n\r\nYou have to edit your **'muhafiz.conf'** file to locate bootstrap file and configure runners:\r\n\r\n    [muhafiz]\r\n    bootstrap-file=~/muhafiz/src/bootstrap.php\r\n    active-runners='php, bom'\r\n\r\nList of code checkers(aka runners) must be separated by commas.\r\n\r\nAfter this, **'all your commits are belongs to us'**. All your commits will be checked by given runners and commit will be prevented if are there any errors\r\n\r\n\r\n## Runners\r\n* **bom**  Check files for byte order mark\r\n* **php**  Check php files for syntax errors using 'php -l' command line tool\r\n* **phpcs** ([PhpCodeSniffer](http://pear.php.net/package/PHP_CodeSniffer/redirected))\r\n    * config parameters :\r\n        * 'muhafiz.runners.phpcs.standard' : set coding standard (see [reference doc](http://pear.php.net/manual/en/package.php.php-codesniffer.config-options.php)) | defaults to \"PEAR\"\r\n        * 'muhafiz.runners.phpcs.report' : set reporting type (see [reference doc](http://pear.php.net/manual/en/package.php.php-codesniffer.config-options.php)) | defaults to \"emacs\"\r\n* **php-cs-fixer** ([Php CS Fixer](http://cs.sensiolabs.org/))\r\n    * config parameters :\r\n        * 'muhafiz.runners.php-cs-fixer.standard' : set coding standard (see [reference doc](http://cs.sensiolabs.org/)) | defaults to \"psr2\"\r\n* **jshint** ([JSHint Node.js Command Line Tool](http://www.jshint.com/platforms/))\r\n    * config parameters :\r\n        * 'muhafiz.runners.jshint.config' : jshint config file (see [reference doc](http://www.jshint.com/docs/)) | defaults to \".jshintrc\"\r\n* **lineend** Check files' line endings\r\n    * config parameters :\r\n        * 'muhafiz.runners.lineend.allowed' : should be 'unix' or 'windows'\r\n\r\n* **vardump** Check php/phtml files for var_dump() or print_r() statement\r\n* **consolefoo** Check js files for console.*() statements\r\n\r\n## Setting exclude patterns for runners\r\nExclude patterns can be set for each runner with setting a RegExp rule in 'muhafiz.runners.RUNNER_NAME.exclude-pattern' like\r\n\r\nGit:\r\n\r\n    $ git config muhafiz.runners.lineend.exclude-pattern '/static\\/images/'\r\n\r\nSubversion:\r\n\r\n    [muhafiz]\r\n    runners.lineend.exclude-pattern='/static\\/images/'\r\n\r\nIn this example, lineend rune will  not be applied to files which matches that rule (like /foo/static/images/bar.xyz)\r\n\r\n## Disabling pushes to specific branches (Only on pre-receive hook)\r\nYou can disable pushes to specific branches by\r\n\r\nGit:\r\n\r\n    $ git config muhafiz.disabled-branches \"foo bar\"\r\n\r\nSubversion:\r\n\r\n    [muhafiz]\r\n    disabled-branches=\"foo bar\"\r\n\r\n## Contributors\r\n[Osman Yüksel](https://github.com/yuxel) <br />\r\n[Volkan Altan](https://github.com/volkan) <br />\r\n[chesterx](https://github.com/chesterx) <br />\r\n[Adil İlhan](https://github.com/adililhan) <br />\r\n[Eser Özvataf](https://github.com/larukedi)\r\n\r\n\r\n## TODO\r\n* verbose options","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}